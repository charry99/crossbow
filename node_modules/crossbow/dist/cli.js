"use strict";
var cli_commands_1 = require("./cli.commands");
var _ = require("../lodash.custom");
var cli_parse_1 = require("./cli.parse");
function default_1(args) {
    var command = args[0];
    var match = getCommand(command, cli_commands_1.commands);
    if (!match.length) {
        // first look if the user provided a --version flag
        var cli_1 = cli_parse_1.default(["no-command"].concat(args), require("../opts/global-common.json"));
        if (cli_1.flags.version) {
            return { cli: cli_1, execute: false, output: [require("../package.json").version] };
        }
        var commandOptions_1 = cli_commands_1.commands["run"].opts.map(require);
        var opts_1 = _.merge.apply(_, [{}].concat(commandOptions_1));
        var cli2 = cli_parse_1.default(["run"].concat(args), opts_1);
        /**
         * If there was additional input, try to run a task
         */
        if (cli2.input.length > 1) {
            return { cli: cli2, execute: true, output: [] };
        }
        return { cli: cli2, execute: false, output: [printHelp(cli_commands_1.commands)] };
    }
    var commandName = match[0];
    var commandOptions = cli_commands_1.commands[commandName].opts.map(require);
    var opts = _.merge.apply(_, [{}].concat(commandOptions));
    var cli = cli_parse_1.default(args, opts);
    /**
     * Here, the user gave the --help flag along with a valid
     * command. So we show command-specific help
     */
    if (cli.flags.help) {
        return { cli: cli, execute: false, output: [cli_commands_1.commands[match[0]].help] };
    }
    return { cli: cli, execute: true, output: [] };
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = default_1;
function printHelp(commands) {
    return "Usage: crossbow [command] [..args] [OPTIONS]\n\n{bold:Crossbow Commands:} \n\n" + cli_commands_1.twoColFromJson(commands, "description") + "\n\n{bold:Example: Run the task 'build-js'}\n\n    $ crossbow run build-js\n    \n{bold:Example: Run the tasks build-css and build-js in sequence}\n\n    $ crossbow run build-css build-js\n        \n{bold:For more detailed help, use the command name + the --help flag}\n\n    $ crossbow run --help\n    $ crossbow init --help\n";
}
function getCommand(incoming, commands) {
    return Object.keys(commands).reduce(function (acc, item) {
        var selected = commands[item];
        /**
         * A direct match - this means the typed command matches
         * an command name exactly.
         *
         * eg:
         *  $ crossbow run
         *
         * -> ['run']
         */
        if (item === incoming) {
            return acc.concat(item);
        }
        /**
         * An alias match is when a short-hand command was given
         * and it existed in the 'alias' array for a command.
         *
         * eg:
         *
         *  $ crossbow run
         *
         * commands:
         *
         * run: { alias:['run', 'r'] }
         *
         * -> ['run']
         *
         */
        if (selected.alias && selected.alias.indexOf(incoming) > -1) {
            return acc.concat(item);
        }
        return acc;
    }, []);
}
exports.getCommand = getCommand;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2NsaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsK0NBQXFFO0FBQ3JFLElBQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0FBQ3RDLHlDQUErQztBQVEvQyxtQkFBeUIsSUFBYztJQUVuQyxJQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDeEIsSUFBTSxLQUFLLEdBQUssVUFBVSxDQUFDLE9BQU8sRUFBRSx1QkFBUSxDQUFDLENBQUM7SUFFOUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUVoQixtREFBbUQ7UUFDbkQsSUFBTSxLQUFHLEdBQUcsbUJBQUssRUFBRSxZQUFZLFNBQUssSUFBSSxHQUFHLE9BQU8sQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDLENBQUM7UUFFbEYsRUFBRSxDQUFDLENBQUMsS0FBRyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQ3BCLE1BQU0sQ0FBQyxFQUFDLEdBQUcsT0FBQSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLENBQUMsT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUMsT0FBTyxDQUFDLEVBQUMsQ0FBQztRQUMvRSxDQUFDO1FBRUQsSUFBTSxnQkFBYyxHQUFHLHVCQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUN6RCxJQUFNLE1BQUksR0FBYSxDQUFDLENBQUMsS0FBSyxPQUFQLENBQUMsR0FBTyxFQUFFLFNBQUssZ0JBQWMsRUFBQyxDQUFDO1FBQ3RELElBQU0sSUFBSSxHQUFjLG1CQUFLLEVBQUUsS0FBSyxTQUFLLElBQUksR0FBRyxNQUFJLENBQUMsQ0FBQztRQUV0RDs7V0FFRztRQUNILEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDeEIsTUFBTSxDQUFDLEVBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUMsQ0FBQztRQUNsRCxDQUFDO1FBRUQsTUFBTSxDQUFDLEVBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxDQUFDLFNBQVMsQ0FBQyx1QkFBUSxDQUFDLENBQUMsRUFBQyxDQUFDO0lBQ3RFLENBQUM7SUFFRCxJQUFNLFdBQVcsR0FBTSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDaEMsSUFBTSxjQUFjLEdBQUcsdUJBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQy9ELElBQU0sSUFBSSxHQUFhLENBQUMsQ0FBQyxLQUFLLE9BQVAsQ0FBQyxHQUFPLEVBQUUsU0FBSyxjQUFjLEVBQUMsQ0FBQztJQUN0RCxJQUFNLEdBQUcsR0FBYyxtQkFBSyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztJQUV6Qzs7O09BR0c7SUFDSCxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDakIsTUFBTSxDQUFDLEVBQUMsR0FBRyxLQUFBLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyx1QkFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFDLENBQUM7SUFDcEUsQ0FBQztJQUVELE1BQU0sQ0FBQyxFQUFDLEdBQUcsS0FBQSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBQyxDQUFDO0FBQzVDLENBQUM7O0FBMUNELDRCQTBDQztBQUVELG1CQUFvQixRQUFRO0lBQ3hCLE1BQU0sQ0FBQyxtRkFJVCw2QkFBYyxDQUFDLFFBQVEsRUFBRSxhQUFhLENBQUMsNFVBY3hDLENBQUM7QUFDRixDQUFDO0FBRUQsb0JBQTJCLFFBQWdCLEVBQUUsUUFBcUI7SUFFOUQsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsR0FBRyxFQUFFLElBQUk7UUFFbkQsSUFBTSxRQUFRLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRWhDOzs7Ozs7OztXQVFHO1FBQ0gsRUFBRSxDQUFDLENBQUMsSUFBSSxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDcEIsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDNUIsQ0FBQztRQUVEOzs7Ozs7Ozs7Ozs7OztXQWNHO1FBQ0gsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLEtBQUssSUFBSSxRQUFRLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDMUQsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDNUIsQ0FBQztRQUVELE1BQU0sQ0FBQyxHQUFHLENBQUM7SUFDZixDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDWCxDQUFDO0FBeENELGdDQXdDQyJ9