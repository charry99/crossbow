"use strict";
var debug = require("debug")("cb:task.transform");
var task_resolve_1 = require("./task.resolve");
/**
 * Task Transformations
 * This gives an opportunity to change a task just before error collection
 */
exports.transforms = {
    /**
     * If an external file was matched, and it has the .sh extension,
     * load it as an @sh adaptor task
     */
    "@sh from File": {
        predicate: function (incoming) {
            return incoming.type === task_resolve_1.TaskTypes.ExternalTask &&
                incoming.externalTasks[0].parsed.ext === ".sh";
        },
        fn: function (incoming) {
            incoming.type = task_resolve_1.TaskTypes.Adaptor;
            incoming.origin = task_resolve_1.TaskOriginTypes.FileSystem;
            incoming.adaptor = "sh";
            incoming.command = ""; // Will read later
            return incoming;
        }
    }
};
/**
 * Allow transformations on tasks before error collections
 */
function applyTransforms(incoming) {
    return Object.keys(exports.transforms).reduce(function (task, key) {
        var transform = exports.transforms[key];
        if (transform.predicate(task)) {
            debug("Applying transform " + key);
            return transform.fn(task);
        }
        return incoming;
    }, incoming);
}
exports.applyTransforms = applyTransforms;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFzay50cmFuc2Zvcm1zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3Rhc2sudHJhbnNmb3Jtcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLG1CQUFtQixDQUFDLENBQUM7QUFFcEQsK0NBQTBEO0FBTzFEOzs7R0FHRztBQUNVLFFBQUEsVUFBVSxHQUFHO0lBQ3RCOzs7T0FHRztJQUNILGVBQWUsRUFBRTtRQUNiLFNBQVMsRUFBVCxVQUFXLFFBQWM7WUFDckIsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEtBQUssd0JBQVMsQ0FBQyxZQUFZO2dCQUMzQyxRQUFRLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLEtBQUssS0FBSyxDQUFDO1FBQ3ZELENBQUM7UUFDRCxFQUFFLEVBQUYsVUFBSSxRQUFjO1lBQ2QsUUFBUSxDQUFDLElBQUksR0FBTSx3QkFBUyxDQUFDLE9BQU8sQ0FBQztZQUNyQyxRQUFRLENBQUMsTUFBTSxHQUFJLDhCQUFlLENBQUMsVUFBVSxDQUFDO1lBQzlDLFFBQVEsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1lBQ3hCLFFBQVEsQ0FBQyxPQUFPLEdBQUcsRUFBRSxDQUFDLENBQUMsa0JBQWtCO1lBQ3pDLE1BQU0sQ0FBQyxRQUFRLENBQUM7UUFDcEIsQ0FBQztLQUNKO0NBQ0osQ0FBQztBQUVGOztHQUVHO0FBQ0gseUJBQWdDLFFBQWM7SUFDMUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsa0JBQVUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLElBQUksRUFBRSxHQUFHO1FBQ3JELElBQU0sU0FBUyxHQUFrQixrQkFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2pELEVBQUUsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzVCLEtBQUssQ0FBQyx3QkFBc0IsR0FBSyxDQUFDLENBQUM7WUFDbkMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUIsQ0FBQztRQUNELE1BQU0sQ0FBQyxRQUFRLENBQUM7SUFDcEIsQ0FBQyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0FBQ2pCLENBQUM7QUFURCwwQ0FTQyJ9